"""init

Revision ID: 0843a59fba37
Revises: 
Create Date: 2024-05-15 19:17:00.791097

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '0843a59fba37'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Color',
    sa.Column('hardware_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('indication', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('unit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Color_id'), 'Color', ['id'], unique=False)
    op.create_table('FlowAndLevel',
    sa.Column('hardware_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('indication', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('unit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_FlowAndLevel_id'), 'FlowAndLevel', ['id'], unique=False)
    op.create_table('Humidity',
    sa.Column('hardware_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('indication', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('unit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Humidity_id'), 'Humidity', ['id'], unique=False)
    op.create_table('Light',
    sa.Column('hardware_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('indication', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('unit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Light_id'), 'Light', ['id'], unique=False)
    op.create_table('Pressure',
    sa.Column('hardware_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('indication', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('unit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Pressure_id'), 'Pressure', ['id'], unique=False)
    op.create_table('SmokeGasAlcohol',
    sa.Column('hardware_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('indication', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('unit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_SmokeGasAlcohol_id'), 'SmokeGasAlcohol', ['id'], unique=False)
    op.create_table('StrainAndWeight',
    sa.Column('hardware_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('indication', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('unit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_StrainAndWeight_id'), 'StrainAndWeight', ['id'], unique=False)
    op.create_table('Temperature',
    sa.Column('hardware_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('indication', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('unit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Temperature_id'), 'Temperature', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_Temperature_id'), table_name='Temperature')
    op.drop_table('Temperature')
    op.drop_index(op.f('ix_StrainAndWeight_id'), table_name='StrainAndWeight')
    op.drop_table('StrainAndWeight')
    op.drop_index(op.f('ix_SmokeGasAlcohol_id'), table_name='SmokeGasAlcohol')
    op.drop_table('SmokeGasAlcohol')
    op.drop_index(op.f('ix_Pressure_id'), table_name='Pressure')
    op.drop_table('Pressure')
    op.drop_index(op.f('ix_Light_id'), table_name='Light')
    op.drop_table('Light')
    op.drop_index(op.f('ix_Humidity_id'), table_name='Humidity')
    op.drop_table('Humidity')
    op.drop_index(op.f('ix_FlowAndLevel_id'), table_name='FlowAndLevel')
    op.drop_table('FlowAndLevel')
    op.drop_index(op.f('ix_Color_id'), table_name='Color')
    op.drop_table('Color')
    # ### end Alembic commands ###
